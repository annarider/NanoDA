hist.revenue <- ggplot(data = companies, aes(x = revenue2014)) +
geom_histogram(color = "black", fill = "steelblue",
binwidth = .05) +
scale_x_continuous(trans = "log10",
breaks = c(1000000, 10000000, 100000000, 5000000000)) +
ggtitle("Number of Companies by Revenue") +
xlab("Revenue (in $USD Millions)") +
ylab("Number of Companies") +
theme(text = element_text(size = 12),
axis.title=element_text(size = 16)
grid.arrange(hist.growth, hist.revenue, nrow = 1)
library(gridExtra)
hist.growth <- ggplot(data = companies, aes(x = growth_dollar)) +
geom_histogram(color = "black", fill = "steelblue",
binwidth = .05) +
scale_x_continuous(trans = "log10",
breaks = c(1000000, 10000000, 100000000, 5000000000)) +
ggtitle("Number of Companies by Growth") +
xlab("Growth (in $USD Millions)") +
ylab("Number of Companies") +
theme(text = element_text(size = 12),
axis.title=element_text(size = 16))
hist.revenue <- ggplot(data = companies, aes(x = revenue2014)) +
geom_histogram(color = "black", fill = "steelblue",
binwidth = .05) +
scale_x_continuous(trans = "log10",
breaks = c(1000000, 10000000, 100000000, 5000000000)) +
ggtitle("Number of Companies by Revenue") +
xlab("Revenue (in $USD Millions)") +
ylab("Number of Companies") +
theme(text = element_text(size = 12),
axis.title=element_text(size = 16)
grid.arrange(hist.growth, hist.revenue, nrow = 1)
library(gridExtra)
hist.growth <- ggplot(data = companies, aes(x = growth_dollar)) +
geom_histogram(color = "black", fill = "steelblue",
binwidth = .05) +
scale_x_continuous(trans = "log10",
breaks = c(1000000, 10000000, 100000000, 5000000000)) +
ggtitle("Number of Companies by Growth") +
xlab("Growth (in $USD Millions)") +
ylab("Number of Companies") +
theme(text = element_text(size = 12),
axis.title=element_text(size = 16))
hist.revenue <- ggplot(data = companies, aes(x = revenue2014)) +
geom_histogram(color = "black", fill = "steelblue",
binwidth = .05) +
scale_x_continuous(trans = "log10",
breaks = c(1000000, 10000000, 100000000, 5000000000)) +
ggtitle("Number of Companies by Revenue") +
xlab("Revenue (in $USD Millions)") +
ylab("Number of Companies") +
theme(text = element_text(size = 12),
axis.title=element_text(size = 16))
grid.arrange(hist.growth, hist.revenue, nrow = 1)
library(gridExtra)
hist.growth <- ggplot(data = companies, aes(x = growth_dollar)) +
geom_histogram(color = "black", fill = "steelblue",
binwidth = .05) +
scale_x_continuous(trans = "log10",
breaks = c(1000000, 10000000, 100000000, 5000000000)) +
ggtitle("Number of Companies by Growth") +
xlab("Growth (in $USD Millions)") +
ylab("Number of Companies") +
theme(text = element_text(size = 12),
axis.title = element_text(size = 16),
axis.text = element_text(size = 8))
hist.revenue <- ggplot(data = companies, aes(x = revenue2014)) +
geom_histogram(color = "black", fill = "steelblue",
binwidth = .05) +
scale_x_continuous(trans = "log10",
breaks = c(1000000, 10000000, 100000000, 5000000000)) +
ggtitle("Number of Companies by Revenue") +
xlab("Revenue (in $USD Millions)") +
ylab("Number of Companies") +
theme(text = element_text(size = 12),
axis.title = element_text(size = 16),
axis.text = element_text(size = 8))
grid.arrange(hist.growth, hist.revenue, nrow = 1)
library(gridExtra)
hist.growth <- ggplot(data = companies, aes(x = growth_dollar)) +
geom_histogram(color = "black", fill = "steelblue",
binwidth = .05) +
scale_x_continuous(trans = "log10",
breaks = c(1000000, 10000000, 100000000, 5000000000)) +
ggtitle("Number of Companies by Growth") +
xlab("Growth (in $USD Millions)") +
ylab("Number of Companies") +
theme(text = element_text(size = 12),
axis.title = element_text(size = 12),
axis.text = element_text(size = 8))
hist.revenue <- ggplot(data = companies, aes(x = revenue2014)) +
geom_histogram(color = "black", fill = "steelblue",
binwidth = .05) +
scale_x_continuous(trans = "log10",
breaks = c(1000000, 10000000, 100000000, 5000000000)) +
ggtitle("Number of Companies by Revenue") +
xlab("Revenue (in $USD Millions)") +
ylab("Number of Companies") +
theme(text = element_text(size = 12),
axis.title = element_text(size = 12),
axis.text = element_text(size = 8))
grid.arrange(hist.growth, hist.revenue, nrow = 1)
ggplot(data = subset(companies, revenue2014 < 2000000000),
aes(x = revenue2014/1000000, y = growth_dollar/1000000)) +
geom_jitter(aes(color = industry_tech)) +
scale_color_brewer(type = 'qual', palette = "Set1") +
geom_smooth(aes(color = industry_tech)) +
xlab("Revenue (in $USD Millions)") +
ylab("Growth (in $USD Millions)") +
ggtitle("Growth by 2014 Revenue for IT versus non-IT companies") +
scale_x_continuous(breaks = seq(from = 0, to = 2000, by = 250)) +
theme(title = element_text(size = 12))
ggplot(data = subset(companies, revenue2014 < 2000000000),
aes(x = revenue2014/1000000, y = growth_dollar/1000000)) +
geom_jitter(aes(color = industry_tech)) +
scale_color_brewer(type = 'qual', palette = "Set1") +
geom_smooth(aes(color = industry_tech)) +
xlab("Revenue (in $USD Millions)") +
ylab("Growth (in $USD Millions)") +
ggtitle("Growth by 2014 Revenue for IT v. non-IT companies") +
scale_x_continuous(breaks = seq(from = 0, to = 2000, by = 250)) +
theme(title = element_text(size = 12))
ggplot(data = companies,
aes(x = revenue2014, y = growth_per_worker)) +
geom_point(aes(color = workers_grouped)) +
scale_x_log10() +
scale_y_log10() +
scale_color_brewer(type = 'qual', name = "Number of \n Workers",
labels = c("1 - 25", "26 - 50", "51 - 125",
"126 - 250", "251 - 2500", "2501 - 1000",
"1001 - 2000", "2001 - 3500")) +
xlab("Revenue (in $USD Millions)") +
ylab("Growth (in $USD Millions)") +
ggtitle("Growth (per worker) by Revenue") +
theme(axis.text = element_text(size = 12))
ggplot(data = sample_n(subset(companies, revenue2014 < 15000000), 1000),
aes(x = revenue2014, y = growth_dollar)) +
geom_jitter(aes(color = industry_tech )) +
scale_color_brewer(type = 'qual', palette = "Set1") +
geom_point(aes(color = industry_tech, size = yrs_on_list)) +
theme(text = element_text(size = 10),
axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data = sample_n(subset(companies, revenue2014 < 15000000), 1000),
aes(x = revenue2014, y = growth_dollar)) +
geom_jitter(aes(color = industry_tech )) +
scale_color_brewer(type = 'qual', palette = "Set1") +
geom_point(aes(color = industry_tech, size = yrs_on_list)) +
theme(text = element_text(size = 10),
axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = subset(companies, revenue2014 < 2000000000),
aes(x = revenue2014, y = growth_dollar)) +
geom_jitter(aes(color = industry_tech)) +
scale_color_brewer(type = 'qual', palette = "Set1") +
geom_smooth(aes(color = industry_tech)) +
theme(text = element_text(size = 10))
ggplot(data = companies,
aes(x = revenue2014, y = growth_dollar)) +
geom_jitter(aes(color = industry_tech ), alpha = 1/3) +
scale_color_brewer(type = 'qual', palette = "Set1") +
scale_x_log10() +
scale_y_log10() +
theme(text = element_text(size = 10))
ggplot(data = companies_top_states_capita,
aes(x = revenue2014, y = growth_dollar)) +
geom_violin(aes(color = industry_tech)) +
facet_wrap(~ state_l) +
scale_x_log10() +
scale_y_log10() +
scale_color_brewer(type = 'qual', palette = 'Set1') +
theme(text = element_text(size = 12),
axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data = companies, aes(x = growth)) +
geom_histogram(binwidth = 10,
color = 'black', fill = '#F79420') +
scale_x_continuous(limits = c(0, 1000))
library("ggplot2", lib.loc="/usr/local/Cellar/r/3.1.3/R.framework/Versions/3.1/Resources/library")
ggplot(data = companies, aes(x = growth)) +
geom_histogram(binwidth = 10,
color = 'black', fill = '#F79420') +
scale_x_continuous(limits = c(0, 1000))
---
title: "Exploration of the 5000 Fastest Growing Private Companies in the U.S."
author: "Anna Li"
date: "May 25, 2015"
output: html_document
---
5000 Fastest Growing Private Companies in the U.S.
```{r echo=FALSE, message=FALSE, warning=FALSE, packages}
# Load all of the packages that you end up using
# in your analysis in this code chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk.
# This prevents the code from displaying in the knitted HTML output.
# You should set echo=FALSE for all code chunks in your file.
library(ggplot2)
library(GGally)
library("RColorBrewer")
# eliminates scientific notation when printing large numbers
options(scipen=999)
```
```{r echo=FALSE, include=FALSE, Load_the_Data}
# Load the Data into "companies"
# See WrangleInc5000.py for python code that cleaned and
# subsetted original CSV before importing to R
getwd()
setwd("/Users/horsepower/Dropbox/Udacity/NanoDA/EDAwithR/Project3/")
companies <- read.csv("Inc5000_Companies_2014_subset.csv")
# Rename the first column with a null variable name to "rowNum"
names(companies)[names(companies) == 'X'] <- 'row_num'
```
# Summary statistics
## Preliminary look at the Inc. 5000 Company List data set.
#### List of all variables in the dataframe
```{r echo=FALSE}
names(companies)
```
#### Dimensions of the dataframe
`r nrow(companies)` companies observed over `r ncol(companies)` variables listed above
```{r echo=FALSE}
dim(companies)
```
#### Structure of dataframe with preview of data values
```{r echo=FALSE}
str(companies)
# Change rank to ordered factor since the variable
# is categorical and order matters
companies$rank <- as.ordered(companies$rank)
companies$rank <- ordered(companies$rank,
levels=rev(levels(companies$rank)))
```
Explore factor variables and the different levels in State and Industry
#### State
```{r echo=FALSE, state_factor}
levels(companies$state_l)
```
#### Industry
```{r echo=FALSE, industry_factor}
levels(companies$state_l)
```
#### Summary of the data set
```{r echo=FALSE}
summary(companies)
```
## Initial Observations from a summary of the data set
* There are 5000 companies ranked from 1 to 5000 based on their percentage growth in 2014, from greatest rate of growth (ranked 1) to slowest rate of growth (ranked 5000).
+ Greatest rate of growth is 158956.91%, lowest is 42.45%
* There are companies representing all 50 states plus one territory (Puerto Rico), resulting in 51 levels for state.
* The minimum number of works is 0 (need to explore further how it is possible to have no employees) with the maximum at 34219. Most companies on the list have fewer than 150 employees.
* The top 5 states with the greatest number of companies on the list are: California, Texas, New York, Florida, and Virginia. But the top 5 cities with the greatest number of companies on the list are: New York, Chicago, Atlanta, Austin, and San Diego. It may be worth figuring out why the top states and top cities don't match.
* The top industries representing greatest growth are: IT, Ad & Marketing, Business Products & Services, Health, and Software.
* For most companies, it is their first or second year on the list. About a quarter have been on the list for more than 4 times, with 12 years being the highest number of years any one company has been on the list.
# Univariate Plots Section
### Histogram of states where companies are located
```{r echo=FALSE, States_Univariate_Plots}
ggplot(data = companies, aes(x = state_l)) +
geom_bar() +
xlab("State") +
ylab("Count") +
# densely packed x axis labels need spacing
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Count of states where
companies are located")
```
### Histograms of workers by count
```{r echo=FALSE, Workers_Univariate_Plots}
ggplot(data = companies, aes(x = workers)) +
geom_histogram() +
xlab("Workers") +
ylab("Count") +
ggtitle("Count of Workers")
```
First plot doesn't have small enough binwidths to see the trend. Reduce binwidth shows
a histogram plot that skews right. What happens to distribution if I perform a
long10 transformation?
```{r echo=FALSE}
ggplot(data = companies, aes(x = workers)) +
geom_histogram(binwidth = 10,
color = 'black', fill = '#F79420') +
# cut out some outliers
xlim(0, 1000) +
xlab("Workers") +
ylab("Count") +
ggtitle("Count of Workers")
```
Transforming the long tail by taking the log10 of workers
helps better understand the distribution of workers. The transformed workers distribution
looks close to a normal distribution with a longer tail on the right.
```{r echo=FALSE}
ggplot(data = companies, aes(x = workers)) +
geom_histogram(binwidth = .05,
color = 'black', fill = '#F79420') +
scale_x_log10() +
xlab("Workers") +
ylab("Count") +
ggtitle("Count of Workers (log10)")
summary(companies$workers)
```
### Distribution of industry
Top industry is IT Services with almost 800 companies. IT Services is the most represented industry by a large margin. The next two industries with greatest number of companies is Ad & Marketing and Business Products & Services with just over 400 companies each, counts that are just over half of IT Services.
```{r echo=FALSE, Industry_Univariate_Plots}
ggplot(data = companies, aes(x = industry)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90,
hjust = 1))
```
### Distribution of revenue
```{r echo=FALSE, Revenue_Univariate_Plots}
ggplot(data = companies, aes(x = revenue)) +
geom_histogram(color = 'black', fill = '#F79420')
ggplot(data = companies, aes(x = revenue)) +
geom_histogram(color = 'black', fill = '#F79420') +
scale_x_log10()
range <- range(companies$revenue)
ggplot(data = companies, aes(x = revenue)) +
geom_histogram(color = 'black', fill = '#F79420',
binwidth = 0.1) +
scale_x_continuous(trans = "log10",
breaks = c(1000000, 10000000, 100000000, 5000000000))
```
The revenue distribution is really skewed right with a very long tail. A log10 transformation and adjusting bin width provides a more natural way to see revenue data and illustrate trends in the data. However, even after a log10 transformation, the data is still skewed to the right. Removing extremely high revenue outliers helps show a more normal distribution.
Part of the reason the distribution doesn't look entirely normal is because the log-normal distribution looks truncated on the left side. This is likely due to the dataset containing only the top 5000 companies. If the data extended to 10,000, for example, the curve will likely look more normally distributed.
### Distribution of growth
```{r echo=FALSE, Growth_Univariate_Plots}
ggplot(data = companies, aes(x = growth)) +
geom_histogram(binwidth = 10,
color = 'black', fill = '#F79420') +
scale_x_continuous(limits = c(0, 1000))
ggplot(data = companies, aes(x = growth)) +
geom_histogram(binwidth = 0.05,
color = 'black', fill = '#F79420') +
scale_x_log10()
summary(companies$growth)
```
The long tail skew to the right justifies log10 transformation.
The distribution of growth and revenue look really similar. Let's try another type of plot to tease apart how the distributions differ. The frequency polygon plot better shows the different shapes of the distributions. The amount of growth is based on revenue generated so it is not surprising the two distributions are similar since they are highly correlated.
### Distribution of Growth vs. Revenue
```{r echo=FALSE}
freqp.growth <- ggplot(data = companies, aes(x = growth)) +
geom_freqpoly() +
scale_x_log10()
freqp.revenue <- ggplot(data = companies, aes(x = revenue)) +
geom_freqpoly() +
scale_x_log10() +
scale_y_continuous(limits = c(0, 600))
library(gridExtra)
grid.arrange(freqp.growth, freqp.revenue, nrow = 1)
dens.growth <- ggplot(data = companies, aes(x = growth)) +
geom_density() +
scale_x_log10()
dens.revenue <- ggplot(data = companies, aes(x = revenue)) +
geom_density() +
scale_x_log10() +
scale_y_continuous(limits = c(0, 1))
grid.arrange(dens.growth, dens.revenue, nrow = 1)
```
Many of the highest ranked companies are small businesses. This could be because smaller companies grow faster than big public companies. But it could also be that smaller companies are starting with smaller amounts of revenues. Absolute growth in dollars is different from percentage growth. For example, company with no revenue the previous year that gains some revenue the next year has infinite percentage growth. But this isn't a good reflection on how much revenue the company is generating compared to another company that's making more in absolute revenue but has a lower percentage growth.
I created two new variables, revenue 2013, calculated in terms of current revenue and percentage growth to derive last year's revenue, and growth in dollars, which is revenue 2013 subtracted from revenue 2014.
```{r echo=FALSE, New_Variables}
companies$revenue2013 <- companies$revenue/((companies$growth/100) + 1)
head(companies$revenue2013)
companies$growth_dollar <- companies$revenue - companies$revenue2013
head(companies$growth_dollar)
# renames original columns for clarity
names(companies)[names(companies) == 'revenue'] <- 'revenue2014'
names(companies)[names(companies) == 'growth'] <- 'growth_percentage'
```
## Population Dataset
There is a limitation in my data set. Without data about resident populations in each state or city or metro area it is hard to determine whether the states with the highest number of growing companies have growing companies because there are more people living there or if there is something special about that state that fosters growth. Therefore, I looked for population data from the U.S. Census Bureau and found population estimates for 2010 to 2014. This works with the company data from 2014 with the reverse engineered revenue and growth numbers I calculated for 2013.
The structure of the new dataset of state population data:
```{r echo=FALSE, Population, message=FALSE, warning=FALSE}
# Population numbers have commas separating the thousands place.
# Must convert population to numeric to perform arithmetic
population <- read.csv("state_population_census.csv", stringsAsFactors=FALSE)
head(population)
```
Using dplyr, I can create a new dataset that aggregates all growth and revenue numbers for companies by state and calculates the growth per capita.
```{r echo=FALSE, State_PerCapita, message=FALSE, warning=FALSE}
library(dplyr)
state_growth <- companies %>%
group_by(state_l) %>%
summarise(state_growth_dollar = sum(growth_dollar)) %>%
ungroup() %>%
arrange(state_l)
state_growth <- merge(x = state_growth,
y = subset(population,
select = c("Geographic_Area",
"Est_2014")),
by.x = "state_l", by.y = "Geographic_Area")
names(state_growth)[names(state_growth) == 'Est_2014'] <- 'state_population2014'
state_growth$state_population2014 <-
as.numeric(gsub(",", "", state_growth$state_population2014))
state_growth$growth_per_capita <- state_growth$state_growth_dollar/
state_growth$state_population2014
state_growth <- arrange(state_growth, desc(state_growth_dollar))
```
The variables and structure of the new dataset.
```{r echo=FALSE, State_Growth}
names(state_growth)
str(state_growth)
```
# Univariate Analysis
### What is the structure of your dataset?
I have two datasets. The original dataset is a list of the 5000 fastest growing private companies in 2014 in the U.S. from Inc. 5000. The second dataset I have is state population data from the Census Bureau. I have two resulting data frames: companies is the Inc. 5000 data set with new variables added, and state_growth is population data with additional variables.
### What is/are the main feature(s) of interest in your dataset?
The variables most interesting to explore are the growth in percentage and dollar amounts since the dataset from Inc. 5000 is specifically about the fastest growing private companies in the U.S. I am also very interested in the industry the companies are in.
### What other features in the dataset do you think will help support your investigation into your feature(s) of interest?
Revenue will be important way to understand growth. For example, a company with a small revenue will see greater gains in percentage growth than a company with larger revenue amount but the latter could have a much greater revenue and growth in absolute dollar amounts. So it is critical to interpret growth in light of revenue.
State population data is also important to better understand growth. A larger state might appear to have greater growth in absolute dollar amounts but that could be influenced by a greater population. Therefore investigating growth per capita can provide a fairer way to look at growth, especially from the point of view of smaller states.
### Did you create any new variables from existing variables in the dataset?
I created 4 new variables from existing variables across two datasets
I created two new variables in the companies data frame: 1. revenue2013, 2. growth_dollar. I reverse engineered revenue from 2013 using revenue from 2014 and percentage growth. Then I subtracted the 2013 revenue from 2014 revenue to get the growth_dollar.
I also created a new dataframe using the state population data from the census. In this dataframe, I added two other variables: 3. state_growth_dollar and 4. growth_per_capita. state_growth_dollar was calculated by grouping together states and summing the growth_dollar derived from the 2nd variable I created growth_dollar. The growth_per_capita variable was created by dividing growth_dollar by the state population.
### Of the features you investigated, were there any unusual distributions? Did you perform any operations on the data to tidy, adjust, or change the form of the data? If so, why did you do this?
The revenue, growth, and workers histograms all skewed right with a very long tail. I had to perform a log transformation to better understand the data. I performed a lot of tidying and adjusting to import and join the two data frames, including converting the population data to a numeric because the commas that separated the thousands place was causing the read.csv() command to import population numbers as characters. I needed population numbers to be numeric so I could perform division to calculate the growth_per_capita.
# Bivariate Plots Section
The structure of the two datasets:
1. State population and aggregate growth of companies
2. 5000 fastest growing companies and the attributes that describe them
```{r echo=FALSE, include=FALSE, Structure_Dataset}
str(state_growth)
str(companies)
```
### Scatter Matrix plots to understand the relationships between variables in the two datasets
```{r echo=FALSE, Matrix_Bivariate_Plots}
str(companies)
# Creating subset for plotting in scatter matrix
companies_matrix_subset <- subset(companies, select = c(-row_num, -id, -rank, -company, -url, -state_l, -state_s, -city, -metro))
str(companies_matrix_subset)
library(GGally)
library(ggplot2)
theme_set(theme_minimal(20))
# Creating scatter matrix for subsetted companies dataset
ggpairs(companies_matrix_subset)
View(companies)
View(companies)
View(companies)
View(companies_top_states)
View(companies_top_states_capita)
View(companies_matrix_subset)
View(companies_matrix_subset)
View(companies)
View(industry_ranks)
View(population)
View(state_growth)
View(companies_top_states_capita)
View(industry_ranks)
View(companies)
View(companies_top_states)
View(companies)
write.table(companies, quote = TRUE, sep = ",", eol = "\n", dec = ".")
write.table(companies, quote = TRUE, sep = ",", eol = "\n", dec = ".", file = "companies.csv", na = "")
write.table(companies, quote = TRUE, sep = ",", eol = "\n", dec = ".", file = "companies.csv", na = "", row.names = FALSE)
write.table(companies, file = "companies.csv", na = "", row.names = FALSE, quote = TRUE, sep = ",", eol = "\n", dec = ".")
View(companies)
companies$industry_categories <- revalue(companies$industry, c(
"Advertising & Marketing" = "Consumer Sector",
"Business Products & Services" = "Industrials",
"Computer Hardware" = "Information Technology",
"Construction" = "Industrials",
"Consumer Products & Services" = "Consumer Sector",
"Education" = "Consumer Sector",
"Energy" = "Energy",
"Engineering" = "Industrials",
"Environmental Services" = "Industrials",
"Financial Services" = "Financials",
"Food & Beverage" = "Consumer Sector",
"Government Services" = "Industrials",
"Health" = "Health Care",
"Human Resources" = "Industrials",
"Insurance" = "Financials",
"IT Services" = "Information Technology",
"Logistics & Transportation" = "Industrials",
"Manufacturing" = "Industrials",
"Media" = "Consumer Sector",
"Real Estate" = "Financials",
"Retail" = "Consumer Sector",
"Security" = "Industrials",
"Software" = "Information Technology",
"Telecommunications" = "Telecommunication Services",
"Travel & Hospitality" = "Consumer Sector"))
?revalue
library("plyr", lib.loc="/usr/local/Cellar/r/3.1.3/R.framework/Versions/3.1/Resources/library")
detach("package:dplyr", unload=TRUE)
library("dplyr", lib.loc="/usr/local/Cellar/r/3.1.3/R.framework/Versions/3.1/Resources/library")
companies$industry_categories <- revalue(companies$industry, c(
"Advertising & Marketing" = "Consumer Sector",
"Business Products & Services" = "Industrials",
"Computer Hardware" = "Information Technology",
"Construction" = "Industrials",
"Consumer Products & Services" = "Consumer Sector",
"Education" = "Consumer Sector",
"Energy" = "Energy",
"Engineering" = "Industrials",
"Environmental Services" = "Industrials",
"Financial Services" = "Financials",
"Food & Beverage" = "Consumer Sector",
"Government Services" = "Industrials",
"Health" = "Health Care",
"Human Resources" = "Industrials",
"Insurance" = "Financials",
"IT Services" = "Information Technology",
"Logistics & Transportation" = "Industrials",
"Manufacturing" = "Industrials",
"Media" = "Consumer Sector",
"Real Estate" = "Financials",
"Retail" = "Consumer Sector",
"Security" = "Industrials",
"Software" = "Information Technology",
"Telecommunications" = "Telecommunication Services",
"Travel & Hospitality" = "Consumer Sector"))
View(companies)
write.table(companies, file = "companies.csv", na = "", row.names = FALSE, quote = TRUE, sep = ",", eol = "\n", dec = ".")

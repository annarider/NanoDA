"Telecommunication Services" = "Bottom 4 Industry Category"))
ggplot(data = companies,
aes(x = revenue2014, y = growth_dollar)) +
geom_jitter(aes(color = industry_top3)) +
geom_smooth(aes(color = industry_top3)) +
scale_color_brewer(type = 'qual', palette = "Set1")
conflicts()
library(plyr)
library(dplyr)
industry_ranks <- companies  %>%
group_by(industry_categories) %>%
dplyr::summarise(count = n()) %>%
arrange(desc(count))
conflicts()
industry_ranks
companies$industry_top3 <- revalue(companies$industry_categories, c(
"Information Technology" = "Top 3 Industry Category",
"Consumer Sector" = "Top 3 Industry Category",
"Industrials" = "Top 3 Industry Category",
"Energy" = "Bottom 4 Industry Category",
"Financials" = "Bottom 4 Industry Category",
"Health Care" = "Bottom 4 Industry Category",
"Telecommunication Services" = "Bottom 4 Industry Category"))
ggplot(data = companies,
aes(x = revenue2014, y = growth_dollar)) +
geom_jitter(aes(color = industry_top3)) +
geom_smooth(aes(color = industry_top3)) +
scale_color_brewer(type = 'qual', palette = "Set1")
# Calculating the top 3 industries based on number of companies
industry_ranks <- companies  %>%
dplyr::group_by(industry_categories) %>%
dplyr::summarise(count = n()) %>%
dplyr::arrange(desc(count))
industry_ranks
companies$industry_top3 <- revalue(companies$industry_categories, c(
"Information Technology" = "Top 3 Industry Category",
"Consumer Sector" = "Top 3 Industry Category",
"Industrials" = "Top 3 Industry Category",
"Energy" = "Bottom 4 Industry Category",
"Financials" = "Bottom 4 Industry Category",
"Health Care" = "Bottom 4 Industry Category",
"Telecommunication Services" = "Bottom 4 Industry Category"))
ggplot(data = companies,
aes(x = revenue2014, y = growth_dollar)) +
geom_jitter(aes(color = industry_top3)) +
geom_smooth(aes(color = industry_top3)) +
scale_color_brewer(type = 'qual', palette = "Set1")
ggplot(data = companies, aes(x = revenue2014, y = growth_dollar)) +
geom_point() +
scale_x_log10() +
scale_y_log10()
ggplot(data = companies, aes(x = revenue2014, y = growth_dollar)) +
geom_point(alpha = 1/2, position = jitter) +
scale_x_log10() +
scale_y_log10()
ggplot(data = companies, aes(x = revenue2014, y = growth_dollar)) +
geom_jitter(alpha = 1/2) +
scale_x_log10() +
scale_y_log10()
ggplot(data = companies, aes(x = revenue2013,
y = growth_dollar)) +
geom_jitter(alpha = 1/2) +
scale_x_log10() +
scale_y_log10()
ggplot(data = companies, aes(x = revenue2013,
y = growth_dollar)) +
geom_point()
ggplot(data = companies, aes(x = revenue2013,
y = growth_dollar)) +
geom_jitter(alpha = 1/2) +
scale_x_log10() +
scale_y_log10()
ggplot(data = companies, aes(x = revenue2013, y = growth_percentage)) +
geom_point()
ggplot(data = companies, aes(x = revenue2013, y = growth_percentage)) +
geom_jitter(alpha = 1/2) +
scale_x_log10() +
scale_y_log10()
ggplot(data = companies, aes(x = revenue2013,
y = growth_dollar)) +
geom_jitter(alpha = 1/2) +
scale_x_log10() +
scale_y_log10()
ggplot(data = companies, aes(x = revenue2014, y = growth_dollar)) +
geom_point()
ggplot(data = companies, aes(x = revenue2014, y = growth_percentage)) +
geom_point()
ggplot(data = companies, aes(x = revenue2014, y = growth_percentage)) +
geom_point() +
scale_x_log10() +
scale_y_log10()
ggplot(data = companies, aes(x = revenue2014/1000000,
y = growth_percentage)) +
geom_point() +
scale_x_continuous(limits = c(0, 1300),
aes(x = "Revenue (Millions)")) +
scale_y_continuous(limits = c(0, 15000),
aes(y = "Growth (percent)"))
ggplot(data = companies, aes(x = revenue2014, y = growth_percentage)) +
geom_point() +
scale_x_log10() +
scale_y_log10()
ggplot(data = companies, aes(x = revenue2014/1000000,
y = growth_percentage)) +
geom_jitter(alpha = 1/5) +
scale_x_continuous(limits = c(0, 500),
aes(x = "Revenue (Millions)")) +
scale_y_continuous(limits = c(0, 5000),
aes(y = "Growth (percent)")) +
scale_x_log10()
ggplot(data = companies, aes(x = revenue2014, y = growth_percentage)) +
geom_point() +
scale_x_log10() +
scale_y_log10()
ggplot(data = companies, aes(x = revenue2014/1000000,
y = growth_percentage)) +
geom_point() +
scale_x_continuous(limits = c(0, 1300),
aes(x = "Revenue (Millions)")) +
scale_y_continuous(limits = c(0, 15000),
aes(y = "Growth (percent)"))
ggplot(data = companies, aes(x = revenue2014/1000000,
y = growth_percentage)) +
geom_jitter(alpha = 1/5) +
scale_x_continuous(limits = c(0, 500),
aes(x = "Revenue (Millions)")) +
scale_y_continuous(limits = c(0, 5000),
aes(y = "Growth (percent)")) +
scale_x_log10()
ggplot(data = companies, aes(x = revenue2014/1000000,
y = growth_percentage)) +
geom_jitter(alpha = 1/2) +
scale_x_continuous(limits = c(0, 100),
aes(x = "Revenue (Millions)")) +
scale_y_continuous(limits = c(0, 1000),
aes(y = "Growth (percent)")) +
scale_x_log10()
ggplot(data = companies, aes(x = revenue2014, y = growth_dollar)) +
geom_bin2d()
ggplot(data = companies, aes(x = revenue2014, y = growth_dollar)) +
geom_density2d()
message("Remove outliers at top of y axis")
ggplot(data = subset(companies, revenue2014 < 150000000),
aes(x = revenue2014, y = growth_dollar)) +
geom_jitter(aes(color = industry)) +
scale_color_brewer(type = 'qual', palette="Set3") +
theme(axis.text=element_text(size = 8))
ggplot(data = subset(companies, revenue2014 < 150000000),
aes(x = revenue2014, y = growth_dollar)) +
geom_jitter(aes(color = industry)) +
scale_color_brewer(type = 'qual', palette="Set3") +
theme(text = element_text(size = 8))
ggplot(data = companies, aes(x = revenue2014,
y = growth_dollar)) +
geom_jitter(color = 'steelblue', alpha = 1/2, size = 1) +
facet_wrap( ~ industry) +
scale_fill_brewer(type = 'qual') +
theme(axis.text.x = element_text(size = 8)) +
scale_x_log10() +
scale_y_log10() +
theme(text = element_text(size = 10))
ggplot(data = subset(companies, revenue2014 > 3000000000),
aes(x = revenue2014, y = growth_dollar)) +
geom_point(aes(color = industry)) +
theme(text = element_text(size = 12))
ggplot(data = subset(companies, revenue2014 > 3000000000),
aes(x = revenue2014, y = growth_dollar)) +
geom_point(aes(color = industry)) +
theme(text = element_text(size = 16))
ggplot(data = subset(companies, revenue2014 > 3000000000),
aes(x = revenue2014, y = growth_dollar)) +
geom_point(aes(color = industry)) +
theme(text = element_text(size = 12))
ggplot(data = subset(companies, revenue2014 > 3000000000),
aes(x = revenue2014, y = growth_dollar)) +
geom_point(aes(color = industry)) +
theme(text = element_text(size = 12))
ggplot(data = sample_n(subset(companies, revenue2014 < 15000000), 1000),
aes(x = revenue2014, y = growth_dollar)) +
geom_jitter(aes(color = industry_tech )) +
scale_color_brewer(type = 'qual', palette = "Set1") +
geom_point(aes(color = industry_tech, size = yrs_on_list)) +
theme(text = element_text(size = 10))
companies$industry_tech <- revalue(companies$industry_categories, c(
"Information Technology" = "IT",
"Consumer Sector" = "Non-IT",
"Industrials" = "Non-IT",
"Energy" = "Non-IT",
"Financials" = "Non-IT",
"Health Care" = "Non-IT",
"Telecommunication Services" = "Non-IT")) +
theme(text = element_text(size = 10))
ggplot(data = sample_n(subset(companies, revenue2014 < 15000000), 1000),
aes(x = revenue2014, y = growth_dollar)) +
geom_jitter(aes(color = industry_tech )) +
scale_color_brewer(type = 'qual', palette = "Set1") +
geom_point(aes(color = industry_tech, size = yrs_on_list)) +
theme(text = element_text(size = 10))
ggplot(data = companies,
aes(x = revenue2014, y = growth_dollar)) +
geom_jitter(aes(color = industry_tech ), alpha = 1/3) +
scale_color_brewer(type = 'qual', palette = "Set1") +
scale_x_log10() +
scale_y_log10()
ggplot(data = subset(companies, revenue2014 < 2000000000),
aes(x = revenue2014, y = growth_dollar)) +
geom_jitter(aes(color = industry_tech)) +
scale_color_brewer(type = 'qual', palette = "Set1") +
geom_smooth(aes(color = industry_tech))
ggplot(data = companies, aes(x = revenue2014,
fill = growth_dollar)) +
geom_histogram(fill = 'steelblue', color = 'black') +
facet_wrap( ~ industry_categories) +
scale_fill_brewer(type = 'qual') +
theme(axis.text.x = element_text(size = 8)) +
scale_x_log10()
ggplot(data = subset(companies, revenue2014 < 150000000),
aes(x = revenue2014, y = growth_dollar)) +
geom_jitter(aes(color = industry_categories)) +
scale_color_brewer(type = 'qual', palette = "Paired")
ggplot(data = subset(companies, revenue2014 < 150000000),
aes(x = revenue2014, y = growth_dollar)) +
geom_jitter(aes(color = industry_categories)) +
scale_color_brewer(type = 'qual', palette = "Paired") +
theme(text = element_text(size = 10))
ggplot(data = sample_n(subset(companies, revenue2014 < 15000000), 1000),
aes(x = revenue2014, y = growth_dollar)) +
geom_jitter(aes(color = industry_tech )) +
scale_color_brewer(type = 'qual', palette = "Set1") +
geom_point(aes(color = industry_tech, size = yrs_on_list)) +
theme(text = element_text(size = 10))
ggplot(data = companies,
aes(x = revenue2014, y = growth_dollar)) +
geom_jitter(aes(color = industry_tech ), alpha = 1/3) +
scale_color_brewer(type = 'qual', palette = "Set1") +
scale_x_log10() +
scale_y_log10()
ggplot(data = companies,
aes(x = revenue2014, y = growth_dollar)) +
geom_jitter(aes(color = industry_tech ), alpha = 1/3) +
scale_color_brewer(type = 'qual', palette = "Set1") +
scale_x_log10() +
scale_y_log10()
ggplot(data = companies,
aes(x = revenue2014, y = growth_dollar)) +
geom_jitter(aes(color = industry_tech)) +
scale_color_brewer(type = 'qual', palette = "Set1") +
geom_smooth(aes(color = industry_tech)) +
xlab("Revenue (in $USD Millions)") +
ylab("Growth (in $USD Millions)") +
ggtitle("Growth by 2014 Revenue for IT versus non-IT companies") +
scale_x_log10() +
scale_y_log10() +
theme(text = element_text(size = 10))
ggplot(data = companies,
aes(x = revenue2014, y = growth_dollar)) +
geom_jitter(aes(color = industry_tech)) +
scale_color_brewer(type = 'qual', palette = "Set1") +
geom_smooth(aes(color = industry_tech)) +
xlab("Revenue (in $USD Millions)") +
ylab("Growth (in $USD Millions)") +
ggtitle("Growth by 2014 Revenue for IT versus non-IT companies") +
scale_x_log10() +
scale_y_log10() +
theme(text = element_text(size = 12),
axis.title = element_text(size = 16))
ggplot(data = subset(companies, !is.na(workers_grouped)),
aes(x = workers_grouped, y = growth_dollar)) +
geom_violin(aes(color = industry_tech)) +
scale_color_brewer(type = 'qual', palette = "Set1") +
scale_y_log10() +
theme(axis.text.x = element_text(size = 12)) +
theme(text = element_text(size = 8)
)
ggplot(data = subset(companies, !is.na(workers_grouped)),
aes(x = workers_grouped, y = growth_dollar)) +
geom_violin(aes(color = industry_tech)) +
scale_color_brewer(type = 'qual', palette = "Set1") +
scale_y_log10() +
theme(axis.text.x = element_text(size = 12)) +
theme(text = element_text(size = 8),
axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data = subset(companies, !is.na(workers_grouped)),
aes(x = workers_grouped, y = growth_dollar)) +
geom_jitter(aes(color = industry_categories), alpha = 1) +
scale_color_brewer(type = 'qual', palette = "Set3") +
scale_y_log10() +
theme(text = element_text(size = 8),
axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_line(aes(color = workers_grouped),
stat = 'summary', fun.y = median)
ggplot(data = subset(companies, !is.na(workers_grouped)),
aes(x = workers_grouped, y = growth_dollar)) +
geom_jitter(aes(color = industry_categories), alpha = 1) +
scale_color_brewer(type = 'qual', palette = "Set3") +
scale_y_log10() +
theme(text = element_text(size = 8),
axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data = subset(companies, !is.na(workers_grouped)),
aes(x = workers_grouped, y = growth_dollar)) +
geom_jitter(aes(color = industry_categories), alpha = 1/2) +
scale_color_brewer(type = 'qual', palette = "Set3") +
scale_y_log10() +
theme(text = element_text(size = 8),
axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data = subset(companies, !is.na(workers_grouped)),
aes(x = workers_grouped, y = growth_dollar)) +
geom_jitter(aes(color = industry_categories), alpha = 3/4) +
scale_color_brewer(type = 'qual', palette = "Set3") +
scale_y_log10() +
theme(text = element_text(size = 8),
axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data = companies_top_states,
aes(x = revenue2014, y = growth_dollar)) +
geom_boxplot(aes(color = state_l)) +
facet_wrap( ~state_l) +
scale_x_log10() +
scale_y_log10() +
scale_color_brewer(type = 'qual', palette = 'Set1') +
theme(text = element_text(size = 12))
library(gridExtra)
hist.growth <- ggplot(data = companies, aes(x = growth_dollar)) +
geom_histogram(color = "black", fill = "steelblue",
binwidth = .05) +
scale_x_continuous(trans = "log10",
breaks = c(1000000, 10000000, 100000000, 5000000000)) +
ggtitle("Number of Companies by Growth") +
xlab("Growth (in $USD Millions)") +
ylab("Number of Companies") +
theme(text = element_text(size = 12),
axis.title=element_text(size = 16))
hist.revenue <- ggplot(data = companies, aes(x = revenue2014)) +
geom_histogram(color = "black", fill = "steelblue",
binwidth = .05) +
scale_x_continuous(trans = "log10",
breaks = c(1000000, 10000000, 100000000, 5000000000)) +
ggtitle("Number of Companies by Revenue") +
xlab("Revenue (in $USD Millions)") +
ylab("Number of Companies") +
theme(text = element_text(size = 12),
axis.title=element_text(size = 16)
grid.arrange(hist.growth, hist.revenue, nrow = 1)
library(gridExtra)
hist.growth <- ggplot(data = companies, aes(x = growth_dollar)) +
geom_histogram(color = "black", fill = "steelblue",
binwidth = .05) +
scale_x_continuous(trans = "log10",
breaks = c(1000000, 10000000, 100000000, 5000000000)) +
ggtitle("Number of Companies by Growth") +
xlab("Growth (in $USD Millions)") +
ylab("Number of Companies") +
theme(text = element_text(size = 12),
axis.title=element_text(size = 16))
hist.revenue <- ggplot(data = companies, aes(x = revenue2014)) +
geom_histogram(color = "black", fill = "steelblue",
binwidth = .05) +
scale_x_continuous(trans = "log10",
breaks = c(1000000, 10000000, 100000000, 5000000000)) +
ggtitle("Number of Companies by Revenue") +
xlab("Revenue (in $USD Millions)") +
ylab("Number of Companies") +
theme(text = element_text(size = 12),
axis.title=element_text(size = 16)
grid.arrange(hist.growth, hist.revenue, nrow = 1)
library(gridExtra)
hist.growth <- ggplot(data = companies, aes(x = growth_dollar)) +
geom_histogram(color = "black", fill = "steelblue",
binwidth = .05) +
scale_x_continuous(trans = "log10",
breaks = c(1000000, 10000000, 100000000, 5000000000)) +
ggtitle("Number of Companies by Growth") +
xlab("Growth (in $USD Millions)") +
ylab("Number of Companies") +
theme(text = element_text(size = 12),
axis.title=element_text(size = 16))
hist.revenue <- ggplot(data = companies, aes(x = revenue2014)) +
geom_histogram(color = "black", fill = "steelblue",
binwidth = .05) +
scale_x_continuous(trans = "log10",
breaks = c(1000000, 10000000, 100000000, 5000000000)) +
ggtitle("Number of Companies by Revenue") +
xlab("Revenue (in $USD Millions)") +
ylab("Number of Companies") +
theme(text = element_text(size = 12),
axis.title=element_text(size = 16))
grid.arrange(hist.growth, hist.revenue, nrow = 1)
library(gridExtra)
hist.growth <- ggplot(data = companies, aes(x = growth_dollar)) +
geom_histogram(color = "black", fill = "steelblue",
binwidth = .05) +
scale_x_continuous(trans = "log10",
breaks = c(1000000, 10000000, 100000000, 5000000000)) +
ggtitle("Number of Companies by Growth") +
xlab("Growth (in $USD Millions)") +
ylab("Number of Companies") +
theme(text = element_text(size = 12),
axis.title = element_text(size = 16),
axis.text = element_text(size = 8))
hist.revenue <- ggplot(data = companies, aes(x = revenue2014)) +
geom_histogram(color = "black", fill = "steelblue",
binwidth = .05) +
scale_x_continuous(trans = "log10",
breaks = c(1000000, 10000000, 100000000, 5000000000)) +
ggtitle("Number of Companies by Revenue") +
xlab("Revenue (in $USD Millions)") +
ylab("Number of Companies") +
theme(text = element_text(size = 12),
axis.title = element_text(size = 16),
axis.text = element_text(size = 8))
grid.arrange(hist.growth, hist.revenue, nrow = 1)
library(gridExtra)
hist.growth <- ggplot(data = companies, aes(x = growth_dollar)) +
geom_histogram(color = "black", fill = "steelblue",
binwidth = .05) +
scale_x_continuous(trans = "log10",
breaks = c(1000000, 10000000, 100000000, 5000000000)) +
ggtitle("Number of Companies by Growth") +
xlab("Growth (in $USD Millions)") +
ylab("Number of Companies") +
theme(text = element_text(size = 12),
axis.title = element_text(size = 12),
axis.text = element_text(size = 8))
hist.revenue <- ggplot(data = companies, aes(x = revenue2014)) +
geom_histogram(color = "black", fill = "steelblue",
binwidth = .05) +
scale_x_continuous(trans = "log10",
breaks = c(1000000, 10000000, 100000000, 5000000000)) +
ggtitle("Number of Companies by Revenue") +
xlab("Revenue (in $USD Millions)") +
ylab("Number of Companies") +
theme(text = element_text(size = 12),
axis.title = element_text(size = 12),
axis.text = element_text(size = 8))
grid.arrange(hist.growth, hist.revenue, nrow = 1)
ggplot(data = subset(companies, revenue2014 < 2000000000),
aes(x = revenue2014/1000000, y = growth_dollar/1000000)) +
geom_jitter(aes(color = industry_tech)) +
scale_color_brewer(type = 'qual', palette = "Set1") +
geom_smooth(aes(color = industry_tech)) +
xlab("Revenue (in $USD Millions)") +
ylab("Growth (in $USD Millions)") +
ggtitle("Growth by 2014 Revenue for IT versus non-IT companies") +
scale_x_continuous(breaks = seq(from = 0, to = 2000, by = 250)) +
theme(title = element_text(size = 12))
ggplot(data = subset(companies, revenue2014 < 2000000000),
aes(x = revenue2014/1000000, y = growth_dollar/1000000)) +
geom_jitter(aes(color = industry_tech)) +
scale_color_brewer(type = 'qual', palette = "Set1") +
geom_smooth(aes(color = industry_tech)) +
xlab("Revenue (in $USD Millions)") +
ylab("Growth (in $USD Millions)") +
ggtitle("Growth by 2014 Revenue for IT v. non-IT companies") +
scale_x_continuous(breaks = seq(from = 0, to = 2000, by = 250)) +
theme(title = element_text(size = 12))
ggplot(data = companies,
aes(x = revenue2014, y = growth_per_worker)) +
geom_point(aes(color = workers_grouped)) +
scale_x_log10() +
scale_y_log10() +
scale_color_brewer(type = 'qual', name = "Number of \n Workers",
labels = c("1 - 25", "26 - 50", "51 - 125",
"126 - 250", "251 - 2500", "2501 - 1000",
"1001 - 2000", "2001 - 3500")) +
xlab("Revenue (in $USD Millions)") +
ylab("Growth (in $USD Millions)") +
ggtitle("Growth (per worker) by Revenue") +
theme(axis.text = element_text(size = 12))
ggplot(data = sample_n(subset(companies, revenue2014 < 15000000), 1000),
aes(x = revenue2014, y = growth_dollar)) +
geom_jitter(aes(color = industry_tech )) +
scale_color_brewer(type = 'qual', palette = "Set1") +
geom_point(aes(color = industry_tech, size = yrs_on_list)) +
theme(text = element_text(size = 10),
axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data = sample_n(subset(companies, revenue2014 < 15000000), 1000),
aes(x = revenue2014, y = growth_dollar)) +
geom_jitter(aes(color = industry_tech )) +
scale_color_brewer(type = 'qual', palette = "Set1") +
geom_point(aes(color = industry_tech, size = yrs_on_list)) +
theme(text = element_text(size = 10),
axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = subset(companies, revenue2014 < 2000000000),
aes(x = revenue2014, y = growth_dollar)) +
geom_jitter(aes(color = industry_tech)) +
scale_color_brewer(type = 'qual', palette = "Set1") +
geom_smooth(aes(color = industry_tech)) +
theme(text = element_text(size = 10))
ggplot(data = companies,
aes(x = revenue2014, y = growth_dollar)) +
geom_jitter(aes(color = industry_tech ), alpha = 1/3) +
scale_color_brewer(type = 'qual', palette = "Set1") +
scale_x_log10() +
scale_y_log10() +
theme(text = element_text(size = 10))
ggplot(data = companies_top_states_capita,
aes(x = revenue2014, y = growth_dollar)) +
geom_violin(aes(color = industry_tech)) +
facet_wrap(~ state_l) +
scale_x_log10() +
scale_y_log10() +
scale_color_brewer(type = 'qual', palette = 'Set1') +
theme(text = element_text(size = 12),
axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data = companies, aes(x = growth)) +
geom_histogram(binwidth = 10,
color = 'black', fill = '#F79420') +
scale_x_continuous(limits = c(0, 1000))
library("ggplot2", lib.loc="/usr/local/Cellar/r/3.1.3/R.framework/Versions/3.1/Resources/library")
ggplot(data = companies, aes(x = growth)) +
geom_histogram(binwidth = 10,
color = 'black', fill = '#F79420') +
scale_x_continuous(limits = c(0, 1000))

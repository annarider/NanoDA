install.packages('ggthemes', dependencies = TRUE)
library(ggthemes)
install.packages('ggplot2', dependencies = TRUE)
install.packages("ggplot2", dependencies = TRUE)
library(ggthemes)
library(ggplot2)
library(ggthemes)
library("knitr", lib.loc="/usr/local/Cellar/r/3.1.2_1/R.framework/Versions/3.1/Resources/library")
detach("package:knitr", unload=TRUE)
setwd("~/Dropbox/Udacity/NanoDA/EDAwithR/EDA_Course_Materials/lesson2")
pf <- read.delim('pseudo_facebook.tsv')
setwd("~/Dropbox/Udacity/NanoDA/EDAwithR/EDA_Course_Materials/lesson3")
pf <- read.delim('pseudo_facebook.tsv')
names(pf)
qplot(x = friend_count, data = pf)
qplot(x = friend_count, data = pf, binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
facet_wrap(~gender)
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
qplot(x = friend_count, data = pf, binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
qplot(x = friend_count, data = subset(pf, !is.na(gender)), binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
# another way to deal with Na values - caution: more dangerous as it will omit
# NA values in other variables, not only gender
qplot(x = friend_count, data = na.omit(pf), binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
by(pf$friend_count, pf$gender, summary)
qplot(x = tenure, data = pf, color = I('black)', fill = I('#099DD9'))
qplot(x = tenure, data = pf, color = I('black)', fill = I('#099DD9'))
qplot(x = tenure, data = pf, color = I('black'), fill = I('#099DD9'))
qplot(x = tenure, data = pf, binwidth = 30, color = I('black'), fill = I('#099DD9'))
qplot(x = tenure, data = pf, binwidth = 5, color = I('black'), fill = I('#099DD9'))
qplot(x = tenure, data = pf, binwidth = 365, color = I('black'), fill = I('#099DD9'))
qplot(x = tenure/365, data = pf, binwidth = 1, color = I('black'), fill = I('#099DD9'))
qplot(x = tensure/365, data = pf, binwidth = .25, color = I('black'), fill = I('#F79420')) +
scale_x_continuous()
qplot(x = tenure/365, data = pf, binwidth = .25, color = I('black'), fill = I('#F79420')) +
scale_x_continuous()
ggplot(aes(x = tenure/365), data = pf) +
geom_histogram(binwidth = .25, color = 'black', fill = '#F79420')
qplot(x = tenure/365, data = pf, binwidth = .25, color = I('black'), fill = I('#F79420')
xlab = "Number of years using Facebook",
ylab = "Number of users in sample") +
scale_x_continuous(breaks = seq (1, 7, 1), lim = c(0,7)) # makes breaks go from 0-7
# Add nice labels to the plot
qplot(x = tenure/365, data = pf, binwidth = .25, color = I('black'), fill = I('#F79420'),
xlab = "Number of years using Facebook",
ylab = "Number of users in sample") +
scale_x_continuous(breaks = seq (1, 7, 1), lim = c(0,7)) # makes breaks go from 0-7
names(pf)
ggplot(aes(x = ages), data = pf) +
geom_histogram(color = 'black', fill = 'blue') +
scale_x_continuous()
ggplot(aes(x = age), data = pf) +
geom_histogram(color = 'black', fill = 'blue') +
scale_x_continuous()
ggplot(aes(x = age), data = pf) +
geom_histogram(color = 'black', fill = 'yellow') +
scale_x_continuous(breaks = seq(1, 120, 10), limits = c(0,120))
scale_x_continuous(breaks = seq(1, 120, 10), limits = c(10,120))
ggplot(aes(x = age), data = pf) +
geom_histogram(color = 'black', fill = 'yellow') +
scale_x_continuous(breaks = seq(1, 120, 10), limits = c(10,120))
ggplot(aes(x = age), data = pf) +
geom_histogram(binwidth = 10, color = 'black', fill = 'yellow') +
scale_x_continuous(breaks = seq(1, 120, 10), limits = c(10,120)) +
xlab("Age in years") +
ylab("Number of users in sample")
ggplot(aes(x = age), data = pf) +
geom_histogram( color = 'black', fill = 'yellow') +
scale_x_continuous(breaks = seq(1, 120, 10), limits = c(10,120)) +
xlab("Age in years") +
ylab("Number of users in sample")
ggplot(aes(x = age), data = pf) +
geom_histogram( color = 'black', fill = 'yellow') +
scale_x_continuous(breaks = seq(1, 120, 4), limits = c(10,120)) +
xlab("Age in years") +
ylab("Number of users in sample")
ggplot(aes(x = age), data = pf) +
geom_histogram(binwidth = 1, fill = '#5760AB') +
scale_x_discrete(breaks = seq(0, 113, 5))
names(pf)
library(knitr)
install.packages('knitr', dependencies = TRUE)
install.packages("knitr", dependencies = TRUE)
library(knitr)
geom_histogram()
p1 = ggplot(aes(x = friend_count), data = pf) +
geom_histogram()
p2 = ggplot(aes(x = friend_count), data = pf) +
geom_histogram() +
scale_x_log10()
p3 = ggplot(aes(x = friend_count), data = pf) +
geom_histogram() +
scale_y_sqrt()
grid.arrange(p1, p2, p3, ncol=1)
```
install.packages('ggthemes', dependencies = TRUE)
install.packages('ggplot2', dependencies = TRUE)
install.packages('knitr', dependencies = TRUE)
library(ggplot2)
library(ggthemes)
library(knitr)
install.packages("knitr", dependencies = TRUE)
library(ggplot2)
library(ggthemes)
library(knitr)
p1 = ggplot(aes(x = friend_count), data = pf) +
geom_histogram()
p2 = ggplot(aes(x = friend_count), data = pf) +
geom_histogram() +
scale_x_log10()
p3 = ggplot(aes(x = friend_count), data = pf) +
geom_histogram() +
scale_y_sqrt()
grid.arrange(p1, p2, p3, ncol=1)
install.packages('gridExtra')
library(gridExtra)
library(gridExtra)
grid.arrange(p1, p2, p3, ncol=1)
p3 = ggplot(aes(x = friend_count), data = pf) +
geom_histogram() +
scale_x_sqrt()
grid.arrange(p1, p2, p3, ncol=1)
p1 <- ggplot(aes(x = friend_count), data = pf) +
geom_histogram()
p2 <- ggplot(aes(x = friend_count), data = pf) +
geom_histogram() +
scale_x_log10()
p3 <- ggplot(aes(x = friend_count), data = pf) +
geom_histogram() +
scale_x_sqrt()
grid.arrange(p1, p2, p3, ncol=1)
q1 <- qplot(x = friend_count, data = pf)
# Adding +1 helps deal with -Infinity and Infinity as log10 approaches 0
q2 <- qplot(x = log10(friend_count + 1), data = pf)
q3 <- qplot(x = sqrt(friend_count), data = pf)
grid.arrange(q1, q2, q3, ncol=1)
r1 <- ggplot(aes(x = friend_count), data = pf) +
geom_histogram()
r2 <- r1 + scale_x_log10()
r3 <- r1 + scale_x_sqrt()
grid.arrange(r1, r2, r3, ncol=1)
qplot(x = friend_count, data = subset(pf, !is.na(gender)), binwidth = 10) +
install.packages("knitr", dependencies = TRUE)
install.packages("knitr", dependencies = TRUE)
qplot(x = friend_count, data = subset(pf, !is.na(gender)), binwidth = 10) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
?qplot
qplot(x = friend_count, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'Friend Count',
ylab = 'Proportion of users with that friend count',
binwidth = 10, geom = 'freqpoly', color = gender) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
qplot(x = friend_count, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'Friend Count',
ylab = 'Proportion of users with that friend count',
binwidth = 10, geom = 'freqpoly', color = gender) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50))
library("ggplot2", lib.loc="/usr/local/Cellar/r/3.1.2_1/R.framework/Versions/3.1/Resources/library")
qplot(x = friend_count, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'Friend Count',
ylab = 'Proportion of users with that friend count',
binwidth = 10, geom = 'freqpoly', color = gender) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50))
names(pf)
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'WWW likes Count',
ylab = 'Proportion of users with that WWW likes count',
binwidth = 10, geom = 'freqpoly', color = gender) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50))
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'WWW likes Count',
ylab = 'Proportion of users with that WWW likes count',
binwidth = 10, geom = 'freqpoly', color = gender))
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'WWW likes Count',
ylab = 'Proportion of users with that WWW likes count',
binwidth = 10, geom = 'freqpoly', color = gender)
summary(pf$www_likes)
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'WWW likes Count',
ylab = 'Proportion of users with that WWW likes count',
binwidth = 10, geom = 'freqpoly', color = gender) +
scale_x_continuous(lim = c(0, 15000), breaks = seq(0, 1000, 50))
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'WWW likes Count',
ylab = 'Proportion of users with that WWW likes count',
binwidth = 10, geom = 'freqpoly', color = gender) +
scale_x_continuous(lim = c(0, 15000), breaks = seq(0, 15000, 50))
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'WWW likes Count',
ylab = 'Proportion of users with that WWW likes count',
binwidth = 10, geom = 'freqpoly', color = gender) +
scale_x_continuous(lim = c(0, 15000), breaks = seq(0, 15000))
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'WWW likes Count',
ylab = 'Proportion of users with that WWW likes count',
binwidth = 10, geom = 'freqpoly', color = gender) +
scale_x_continuous(lim = c(0, 15000), breaks = seq(0, 15000, 1000))
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'WWW likes Count',
ylab = 'Proportion of users with that WWW likes count',
binwidth = 10, geom = 'freqpoly', color = gender) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50))
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'WWW likes Count',
ylab = 'Proportion of users with that WWW likes count',
binwidth = 10, geom = 'freqpoly', color = gender) +
scale_x_continuous(lim = c(0, 15000), breaks = seq(0, 15000, 100))
summary(pf$www_likes)
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'WWW likes Count',
ylab = 'Proportion of users with that WWW likes count',
binwidth = 10, geom = 'freqpoly', color = gender) +
scale_x_continuous(lim = c(0, 15000), breaks = seq(0, 15000, 50))
summary(pf$www_likes)
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'WWW likes Count',
ylab = 'Proportion of users with that WWW likes count',
binwidth = 10, geom = 'freqpoly', color = gender) +
scale_x_continuous(lim = c(0, 15000), breaks = seq(0, 15000, 5000))
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'WWW likes Count',
ylab = 'Proportion of users with that WWW likes count',
binwidth = 10, geom = 'freqpoly', color = gender) +
scale_x_continuous(lim = c(0, 8), breaks = seq(0, 8, 1))
summary(pf$www_likes)
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'WWW likes Count',
ylab = 'Proportion of users with that WWW likes count',
binwidth = 10, geom = 'freqpoly', color = gender) +
scale_x_log10()
qplot(x = www_likes,
data = subset(pf, !is.na(gender)),
xlab = 'WWW likes Count',
ylab = 'Proportion of users with that WWW likes count',
binwidth = 10, geom = 'freqpoly', color = gender) +
scale_x_log10()
qplot(x = www_likes,
data = subset(pf, !is.na(gender)),
xlab = 'WWW likes Count',
ylab = 'Proportion of users with that WWW likes count',
geom = 'freqpoly', color = gender) +
scale_x_log10()
library("knitr", lib.loc="/usr/local/Cellar/r/3.1.2_1/R.framework/Versions/3.1/Resources/library")
chooseCRANmirror()
options("repos")
install.packages(c("boot", "class", "cluster", "codetools", "foreign", "KernSmooth", "lattice", "manipulate", "MASS", "Matrix", "mgcv", "nlme", "nnet", "rpart", "spatial", "survival"))
install.packages(c("boot", "class", "cluster", "codetools", "foreign", "KernSmooth", "lattice", "manipulate", "MASS", "Matrix", "mgcv", "nlme", "nnet", "rpart", "spatial", "survival"))
install.packages(c("boot", "class", "cluster", "codetools", "foreign",
install.packages(c("boot", "class", "cluster", "codetools", "foreign", "KernSmooth", "lattice", "manipulate", "MASS", "Matrix", "mgcv", "nlme", "nnet", "rpart", "spatial", "survival"))
install.packages(c("boot", "class", "cluster", "codetools", "foreign",
library("knitr", lib.loc="/usr/local/Cellar/r/3.1.2_1/R.framework/Versions/3.1/Resources/library")
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
library("ggplot2", lib.loc="/usr/local/Cellar/r/3.1.2_1/R.framework/Versions/3.1/Resources/library")
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')

library(alr3)
data(Mitchell)
summary(Mitchell)
ggplot(data = Mitchell, aes(x = Month, y = Temp)) +
geom_point() +
scale_x_discrete(breaks = 1:12)
library(ggplot)
ggplot(data = Mitchell, aes(x = Month, y = Temp)) +
geom_point() +
scale_x_discrete(breaks = 1:12)
library(ggplot2)
ggplot(data = Mitchell, aes(x = Month, y = Temp)) +
geom_point() +
scale_x_discrete(breaks = 1:12)
ggplot(data = Mitchell, aes(x = Month, y = Temp)) +
geom_point() +
scale_x_continuous(breaks = 1:12)
ggplot(data = Mitchell, aes(x = Month, y = Temp)) +
geom_point() +
scale_x_discrete(breaks = c(1:12)
ggplot(data = Mitchell, aes(x = Month, y = Temp)) +
geom_point() +
scale_x_discrete(breaks = c(1:12)
```
ggplot(data = Mitchell, aes(x = Month, y = Temp)) +
geom_point() +
scale_x_discrete(breaks = c(1:12)
scale_x_discrete(breaks = c(1:12))
ggplot(data = Mitchell, aes(x = Month, y = Temp)) +
geom_point() +
scale_x_discrete(breaks = c(1:12))
ggplot(data = Mitchell, aes(x = Month, y = Temp)) +
geom_point() +
scale_x_date(labels = date_format("%b-%d"))
View(Mitchell)
8%12
12 % 8
12 %% 8
ggplot(data = Mitchell, aes(x = Month, y = Temp)) +
geom_point() +
scale_x_date(labels = date_format("%b-%d"))
0 %% 12
1 %%12
ggplot(data = Mitchell, aes(x = Month %% 12, y = Temp)) +
geom_point()
ggplot(data = Mitchell, aes(x = Month, y = Temp)) +
geom_point()
ggplot(data = Mitchell, aes(x = Month, y = Temp)) +
geom_point() +
coord_cartesian(xlim = c(1:12))
ggplot(data = Mitchell, aes(x = Month, y = Temp)) +
geom_point() +
scale_x_discrete(breaks = seq(0, 203, 12))
ggplot(data = Mitchell, aes(x = Month %% 12, y = Temp)) +
geom_point()
ggplot(data = Mitchell, aes(x = Month, y = Temp)) +
geom_point() +
scale_x_discrete(breaks = seq(0, 203, 12))
ggplot(data = Mitchell, aes(x = Month %% 12, y = Temp)) +
geom_point()
ggplot(data = Mitchell, aes(x = Month %% 11, y = Temp)) +
geom_point()
ggplot(data = Mitchell, aes(x = Month %% 12, y = Temp)) +
geom_point()
ggplot(data = Mitchell, aes(x = Month, y = Temp)) +
geom_point() +
scale_x_discrete(breaks = seq(0, 203, 12))
dcor.ttest(Mitchell$Month, Mitchell$Temp, distance = FALSE)
install(energy, dependencies = TRUE)
install.packages('energy', dependencies = TRUE)
library(energy)
dcor.ttest(Mitchell$Month, Mitchell$Temp, distance = FALSE)
names(pf)
setwd()
getwd()
pf <- read.delim("/Users/horsepower/Dropbox/Udacity/NanoDA/EDAwithR/EDA_Course_Materials/lesson3/pseudo_facebook.tsv")
names(pf)
head(pf$dob_month)
head(pf$age)
head(pf$age, 10)
head(pf$dob_month, 20)
age + age
pf$age + pf$age
pf$age + pf$month/12
pf$age + pf$dob_month/12
pf$age_with_months <- pf$age + pf$dob_month/12
head(pf$dob_month, pf$age, 20)
pf$dob_month, pf$age
head(pf$dob_month, 10)
head(pf$age, 10)
names(pf)
arrange(pf$age_with_months)
pf %>%
arrange(pf$age_with_months)
library(dplyr)
pf %>%
arrange(pf$age_with_months)
pf %>%
groupby(age_with_months) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age_with_months)
pf %>%
group_by(age_with_months) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age_with_months)
pf.fc_by_age_months <- pf %>%
group_by(age_with_months) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age_with_months)
ggplot(data = subset(pf.fc_by_age_months, age < 71), aes(x = age_with_months, y = friend_count_mean)) +
geom_line()
ggplot(data = subset(pf.fc_by_age_months, age_with_months < 71), aes(x = age_with_months, y = friend_count_mean)) +
geom_line()
data(diamonds)
summary(diamonds)
ggplot(data = diamonds, aes(x = price, y = x)) +
geom_point()
cor.test(diamonds$price, diamonds$x)
cor.test(diamonds$price, diamonds$y)
cor.test(diamonds$price, diamonds$z)
ggplot(data = diamonds, aes(x = price, y = depth)) +
geom_point()
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point()
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha = 1/100)
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha = 1/100) +
scale_x_continuous(breaks = seq(2,80,2))
cor.test(diamonds$depth, diamonds$price)
ggplot(data = diamonds, aes(x = carat, y = price)) +
geom_point()
ggplot(data = diamonds, aes(x = carat, y = price)) +
geom_point()
ggplot(data = diamonds, aes(x = carat, y = price)) +
geom_point() +
stat_quantile(quantiles=c(0.9),col="red")
ggplot(data = diamonds, aes(x = carat, y = price)) +
geom_point() +
xlim(0, quantile(diamonds$carat, 0.9)) +
ylim(0, quantile(diamonds$price, 0.9))
ggplot(data = diamonds, aes(x = carat, y = price)) +
geom_point() +
scale_x_continuous(0, quantile(diamonds$carat, 0.9)) +
scale_y_continuous(0, quantile(diamonds$price, 0.9))
ggplot(data = diamonds, aes(x = carat, y = price)) +
geom_point() +
scale_x_continuous(quantile(diamonds$carat, 0.9)) +
scale_y_continuous(quantile(diamonds$price, 0.9))
ggplot(data = diamonds, aes(x = carat, y = price)) +
geom_point() +
scale_x_continuous(quantile(diamonds$carat, 0.9)) +
scale_y_continuous(quantile(diamonds$price, 0.9)) +
xlab("carat") +
ylab("price")
ggplot(data = diamonds, aes(x = carat, y = price)) +
geom_point() +
scale_x_continuous(quantile(diamonds$carat, 0.9)) +
scale_y_continuous(quantile(diamonds$price, 0.9)) +
xlab("carat") +
ylab("price")
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
ggplot(data = diamonds, aes(x = volume, y = price)) +
geom_point()
library(plyr)
count(diamonds$volume == 0)
detach("package:plyr", unload=TRUE)
cor.test(diamonds$price, diamonds$volume)
cor.test(diamonds$price, subset(diamonds, volume > 0 & volume < 800))
diamonds_volume <- subset(diamonds, volume > 0 & volume <= 800)
cor.test(diamonds_volume$price, diamonds_volume$volume)
ggplot(data = diamonds, aes(x = carat, y = price)) +
geom_point() +
scale_x_continuous(quantile(diamonds$carat, 0.99)) +
scale_y_continuous(quantile(diamonds$price, 0.99)) +
xlab("carat") +
ylab("price")
xlim(0, quantile(diamonds$carat, 0.9)) +
quantile(diamonds$carat, .99)
quantile(diamonds$carat, .99)
ggplot(data = diamonds, aes(x = carat, y = price)) +
geom_point() +
scale_x_continuous(limits = c(0, quantile(diamonds$carat, 0.99))) +
scale_y_continuous(limits = c(0, quantile(diamonds$price, 0.99))) +
xlab("carat") +
ylab("price")
ggplot(data = subset(diamonds, volume > 0 & volume <= 800), aes(x = volume, y = price)) +
geom_point()
ggplot(data = diamonds_volume, aes(x = volume, y = price)) +
geom_point()
ggplot(data = diamonds_volume, aes(x = volume, y = price)) +
geom_point(alpha = 1/5)
ggplot(data = diamonds_volume, aes(x = volume, y = price)) +
geom_point(alpha = 1/20)
ggplot(data = diamonds_volume, aes(x = volume, y = price)) +
geom_point(alpha = 1/10) +
install.packages('gridExtra', dependencies = TRUE)
library(gridExtra)
grid.arrange(p2, p1, p3, ncol = 1)
p1 <- ggplot(data = subset(pf.fc_by_age_months, age_with_months < 71),
aes(x = age, y = friend_count_mean)) +
geom_line() +
geom_smooth()
p2 <- ggplot(data = subset(pf.fc_by_age_months, age_with_months < 71),
aes(x = age_with_months, y = friend_count_mean)) +
geom_line() +
geom_smooth()
p3 <- ggplot(data = subset(pf, age < 71),
aes(x = round(age / 5) * 5, y = friend_count)) +
geom_line(stat = 'summary', fun.y = mean)
grid.arrange(p2, p1, p3, ncol = 1)
View(pf.fc_by_age_months)
p1 <- ggplot(data = subset(pf.fc_by_age, age_with_months < 71),
aes(x = age, y = friend_count_mean)) +
geom_line() +
geom_smooth()
pf.fc_by_age <- pf %>%
group_by(age) %>%
summarise(friend_count_mean = mean(friend_count),
n = n()) %>%
arrange(age)
p1 <- ggplot(data = subset(pf.fc_by_age, age_with_months < 71),
aes(x = age, y = friend_count_mean)) +
geom_line() +
geom_smooth()
p2 <- ggplot(data = subset(pf.fc_by_age_months, age_with_months < 71),
aes(x = age_with_months, y = friend_count_mean)) +
geom_line() +
geom_smooth()
p3 <- ggplot(data = subset(pf, age < 71),
aes(x = round(age / 5) * 5, y = friend_count)) +
geom_line(stat = 'summary', fun.y = mean)
grid.arrange(p2, p1, p3, ncol = 1)
View(pf.fc_by_age_months)
p1 <- ggplot(data = subset(pf.fc_by_age, age_with_months < 71),
aes(x = age, y = friend_count_mean)) +
geom_line() +
geom_smooth()
p1 <- ggplot(data = subset(pf.fc_by_age, age < 71),
aes(x = age, y = friend_count_mean)) +
geom_line() +
geom_smooth()
p2 <- ggplot(data = subset(pf.fc_by_age_months, age_with_months < 71),
aes(x = age_with_months, y = friend_count_mean)) +
geom_line() +
geom_smooth()
p3 <- ggplot(data = subset(pf, age < 71),
aes(x = round(age / 5) * 5, y = friend_count)) +
geom_line(stat = 'summary', fun.y = mean)
grid.arrange(p2, p1, p3, ncol = 1)
ggplot(data = diamonds_volume, aes(x = volume, y = price)) +
geom_point(alpha = 1/10) +
geom_smooth()
ggplot(data = diamonds_volume, aes(x = volume, y = price)) +
geom_point(alpha = 1/10) +
geom_smooth(method = "lm")
names(diamonds)
min(diamonds$price)
diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price), median_price = median(price),
min_price = min(price), max_price = max(price), n = n())
str(diamonds)
diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price), median_price = median(price),
min_price = min(price), max_price = max(price), n = n())
diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(as.numeric(price)), median_price = median(price),
min_price = min(price), max_price = max(price), n = n())
diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(as.numeric(price)), median_price = median(as.numeric(price)),
min_price = min(as.numeric(price)), max_price = max(as.numeric(price)), n = n())
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(as.numeric(price)), median_price = median(as.numeric(price)),
min_price = min(as.numeric(price)), max_price = max(as.numeric(price)), n = n())
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
diamonds_mp_by_color
diamonds_mp_by_clarity
p1 <- ggplot(data = diamonds_mp_by_color, aes(x = color, y = mean_price)) +
geom_bar()
p1
p1 <- ggplot(data = diamonds_mp_by_color, aes(x = color, y = mean_price)) +
geom_bar()
p1 <- ggplot(data = diamonds_mp_by_color, aes(x = color, y = mean_price)) +
geom_bar(stat="identity")
p1
p2 <= ggplot(data = diamonds_mp_by_clarity, aes(x = clarity, y = mean_price)) +
geom_bar(stat="identity")
p2
p2 <= ggplot(data = diamonds_mp_by_clarity, aes(x = clarity, y = mean_price)) +
geom_bar(stat="identity")
p2 <- ggplot(data = diamonds_mp_by_clarity, aes(x = clarity, y = mean_price)) +
geom_bar(stat="identity")
p2
grid.arrange(p1, p2, ncol = 1)
pf %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count), n = ())
pf %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count), n = n())
pf %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(as.numeric(friend_count), n = n())
pf %>%
pf %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(as.numeric(friend_count)), n = n())
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
pf.fc_by_age_gender <- pf %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(as.numeric(friend_count)), n = n()) %>%
ungroup() %>%
arrange(age)
pf.fc_by_age_gender
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram(stat="identity")
ggplot(data = pf.fc_by_age_gender, aes(x = age, y = median_friend_count)) +
geom_line()
ggplot(data = pf.fc_by_age_gender, aes(x = age, y = median_friend_count), color = gender) +
geom_line()
ggplot(data = pf.fc_by_age_gender, aes(x = age, y = median_friend_count)) +
geom_line(aes(color = gender), stat = 'summary')
pf.fc_by_age_gender <- pf %>%
filter(!is.na(gender)) %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(as.numeric(friend_count)), n = n()) %>%
ungroup() %>%
arrange(age)
ggplot(data = pf.fc_by_age_gender, aes(x = age, y = median_friend_count)) +
geom_line(aes(color = gender), stat = 'summary')
ggplot(data = pf.fc_by_age_gender, aes(x = age, y = median_friend_count)) +
geom_line(aes(color = gender))
View(diamonds)
head(diamonds$price,2)
head(diamonds$price,3)
diamonds$price[2,]
diamonds[2,]
diamonds[2:3,]
diamonds[2:3,1:2]
diamonds[2:3,carat]
diamonds[2:3,diamonds$carat]
names(diamonds)
subset(diamonds, carat & price)
subset(diamonds, $carat)
subset(diamonds, diamonds$carat,diamonds$price)
diamonds %>%
summarise(carat, price)
diamonds[carat, price]
diamonds[carat, x]
diamonds(carat, x)
?subset
subset(diamonds, select = carat & select = price)
subset(diamonds, select = carat:price)
subset(diamonds, select = c(carat,price)
subset(diamonds, select = c(carat,price))
subset(diamonds, TRUE, select = c(carat,price))
install.packages(c("arm", "Formula", "manipulate", "Matrix", "network"))
ggplot(data = pf, aes(x = tenure, y = prop_initiated)) +
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = median)
library("ggplot2", lib.loc="/usr/local/Cellar/r/3.1.3/R.framework/Versions/3.1/Resources/library")
ggplot(data = pf, aes(x = tenure, y = prop_initiated)) +
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = median)
names(pf)
pf$year_joined <- trunc(abs(pf$tenure/365 - 2014))
pf$year_joined.bucket <- cut(pf$year_joined, breaks = c(2004,2009,2011,2012,2014))
pf$prop_initiated <- pf$friendships_initiated/pf$friend_count
ggplot(data = pf, aes(x = tenure, y = prop_initiated)) +
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = median)
ggplot(data = pf, aes(x = tenure, y = prop_initiated)) +
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = median)
ggplot(data = pf, aes(x = tenure, y = prop_initiated)) +
geom_line(stat = 'summary', fun.y = median, aes(color = year_joined.bucket))
is.data.frame(pf)
install.packages("Matrix")
update.packages(ggplot2)
